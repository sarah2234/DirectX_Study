01
_DirectX2D 폴더와 Visual Studio로 생성한 새 프로젝트의 루트 폴더는 같은 위치에 존재

설정:
windows 마법사>빈 프로젝트
device.cpp 파일 속성>>언어>준수 모드>아니오
프로젝트 sdl검사>아니오
확장>첫번째>hlsl다운(effect 색깔)
project(2105)>>속성>>VC++디렉터리>포함디렉터리,라이브러리 디렉터리
속성관리자(보기탭>다른 창)에서 debug win 32>microsoft.cpp.win32.user 속성>사용자매크로 추가>이름: DH & 값: _DirectX2D(다운받은 폴더)에서 include의 경로 (주소 복사)

==============================================================================================================
02
folder to solution folder 설치:
visual studio 2017: 도구 탭>확장 및 업데이트>온라인>folder to solution folder 다운
visual studio 2019: 확장 탭>확장 관리>온라인>folder to solution folder 다운

notepad++ > 플러그인관리>사용가능>찾기에서 compare 옵션 체크>코드 비교(우클릭하여 분할 창 생성)

visual studio에서 경로 맞추기: visual studio 내에서 프로젝트에 항목 추가(우클릭)한 후 파일 탐색기에서도 똑같은 이름, 똑같은 경로에 항목 추가하기 (반대 과정도 가능)

===============================================================================================================
03
stdafx 추가하여 진행함

설정:
프로젝트 속성>미리 컴파일된 헤더>사용
프로젝트 속성>C/C++ 일반>추가 포함 디렉터리>./로 수정 (프로젝트의 루트 디렉터리를 포함시킴)
stdafx.cpp파일의 경우 속성>C/C++ 일반>미리 컴파일된 헤더>만들기로 수정

===============================================================================================================
04
Renders, Utility, imgui-master 추가하여 진행함

설정:
프로젝트 속성>C/C++ 일반>추가 포함 디렉터리>./;../_Libraries/ (해당 경로는 _Libraries의 위치에 따라 다름)
''/링커>일반>추가라이브러리디렉터리 ../_Libraries/;
folder to solution folder 다운>솔루션 '프로젝트명(현재 2105)' 우클릭 후 추가에서 folder to solution folder에서 _Shader 추가 

device에서 삭제된 요소: shader 안에 존재하므로 삭제한 것 (Google drive에서 03이랑 04 파일 내 Device.cpp 비교해보면 됨)
imgui-master/examples/examples_win32_directx11/examples_win32_directx11.vcxproj >> imgui_widgets.cpp 내 imgui의 다양한 기능이 있음

================================================================================================================
7.14
Input Assembly -> Vertex Shader
4x4 행렬에서 대각성분: 크기 표현
(4행 1열, 4행 2열, 4행 3열)=(x, y, z)
프로그래밍할 때 왼손좌표계를 사용함(왼쪽>오른쪽, 시계방향)

================================================================================================================
HW: 퍼즐 보블 구현하기
1) 화살표 회전 (구슬 쏘는 곳)
2) 이차원 배열로 구슬 위치 표시하나? >> 백준에서 내가 못 푼 양배추 벌레 문제 참고하면 될 듯
* 렉 걸리지 않게 초기에 필요한 리소스 모두 구비해놓기 -> 구슬 쏠 때 렌더링하여 보여주기 -> 구슬 터뜨리면 delete 하지말고 화면 밖으로 리셋해버리기

shader로 색깔 바꾸는 거 복습
